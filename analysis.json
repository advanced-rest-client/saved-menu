{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A list of saved requests in the ARC main menu.\n\nThe element uses direct implementation of the PouchDB to make a query to the\ndatastore. It also listens to events fired by the `arc-models/request-model`\nelement to update state of the saved requests.\n\n### Example\n\n```\n<saved-menu></saved-menu>\n<request-model></request-model>\n```\n\n### Events\n\nThe element listens for the following events.\n\n#### request-object-changed\n\nThe details object has to contain the following properties:\n- `request` (`Object`) - Updated request object. Note, if `_id` of the\nobject changed this should be a copy of the object. Otherwise it won't\nbe possible to recognise old object on the list.\n\nNote: `requests` list does not contain full request object. Don't use this\nobjects to update request object.\n\n#### request-object-deleted\n\nThe details object has to contain the following properties:\n- `id` (`String`) - The `_id` property of removed item.\n\n### Sizing the element\n\nThe element uses `<iron-list>` to render the data in the view. The list is set\nto be flex vertically. It means that the element has to be sized directly by the\nhosting application or otherwise it size will be 0px.\n\nIt can be done using flex layout and making the element to be `flex: 1`.\n\n## Changes in version 2\n\n- PouchDB is no longer included into the element. Each platform can have\ndifferent implementation of the library so this element will not make\nassumtions about the platform.\n- The element does not support \"opened\" attribute. Once inserted into the\nDOM it queries datastore.\n\n### Styling\n`<saved-menu>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--saved-menu` | Mixin applied to the element | `{}`\n`--saved-menu-background-color` | Background color of the menu | `#f7f7f7`\n`--saved-menu-focused-post-method-color` | Font color of focused item POST method label | `rgb(33, 150, 243)`\n`--saved-menu-list` | Mixin applied to the list element. | `{}`\n`--saved-menu-list-item` | Mixin applied to each list item | `{}`\n`--saved-menu-name-label` | Mixin applied to the name label | `{}`\n`--arc-menu-empty-info-color` | Color applied to the empty info section | ``\n`--arc-menu-empty-info-title-color` | Color applied to the title in the empty info section | ``",
      "summary": "",
      "path": "saved-menu.html",
      "properties": [
        {
          "name": "requests",
          "type": "Array.<Object>",
          "description": "The list of request to render.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "hasRequests",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when the project has requests.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "projectId",
          "type": "string | null | undefined",
          "description": "Project datastore ID to display.\nThis should be set only when type is `project`",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 72,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "listType",
          "type": "string | null | undefined",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateListStyles\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_hasTwoLines",
          "type": "boolean | null | undefined",
          "description": "Computed value if the list item should be consisted of two lines of\ndescription.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 91,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 93
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project",
          "type": "Object | null | undefined",
          "description": "A project object associated with requests.\nThis is only valid when `type` is set to `project`. It is set automatically\nwhen `readProjectRequests()` is called.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "querying",
          "type": "boolean | null | undefined",
          "description": "True when the element is querying the database for the data.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "pageLimit",
          "type": "number | null | undefined",
          "description": "Single page query limit.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "150",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_queryStartKey",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 59,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_querySkip",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 60,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "queryOptions",
          "type": "Object | null | undefined",
          "description": "Computed value.\nDatabase query options for pagination.\nUse `pageLimit` to set pagination limit.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "dataUnavailable",
          "type": "boolean | null | undefined",
          "description": "Computed value. True if query ended and there's no results.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "isSearch",
          "type": "boolean | null | undefined",
          "description": "When set this component is in sSavedListMixinearch mode.\nThis means that the list won't be loaded automatically and\nsome operations not related to search are disabled.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 82,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "searchListEmpty",
          "type": "boolean | null | undefined",
          "description": "Computed value. True when the query has been performed and no items\nhas been returned. It is different from `listHidden` where less\nconditions has to be checked. It is set to true when it doesn't\nhave items, is not loading and is search.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 92,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "noAuto",
          "type": "boolean | null | undefined",
          "description": "When set it won't query for data automatically when attached to the DOM.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Adds draggable property to the request list item element.\nThe `dataTransfer` object has `arc/request-object` mime type with\nserialized JSON with request model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 86
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_draggableChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 231,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 237,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "True if the event is cancelable (default value)."
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_requestDeletedHandler",
          "description": "Handler for `request-object-deleted` event. Removes request from the list\nif it existed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_itemDeleted",
          "description": "Removes an item from the list by given id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_historyItemDeleted",
          "description": "Removes a history item from the list by given id.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Request ID to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_requestChangedHandler",
          "description": "Handler for `request-object-changed` custom event.\nDepending on the `type` property it updates / adds / removes item from\nthe requests list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_projectTypeChanged",
          "description": "Handles request change when type is project.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Changed request object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_isProjectRequest",
          "description": "Checks if requests is related to current project.\n`projectId` has to be set on the element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_savedTypeChanged",
          "description": "Handles request change when type is saved or history.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Changed request object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectRead",
          "description": "Dispatches `project-read` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 303,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID to read"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectList",
          "description": "Dispatches `request-project-list` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchRequestChanged",
          "description": "Dispatches `request-object-changed` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 330,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Request type, `saved` or `history`."
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Updated request to store."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Disaptched custom event"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "readProjectRequests",
          "description": "A function to read request data for a project.",
          "privacy": "public",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId",
              "type": "String",
              "description": "Project ID"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise.resolved to requests list."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_legacySort",
          "description": "Sorts requests list by `projectOrder` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 378,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateBulk",
          "description": "Updates requests in bulk opeartion.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateRequest",
          "description": "Sends the `request-object-changed` custom event for each request on the list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 408,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Request object."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise resolved when the request object is updated."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeHasRequests",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 427,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeHasTwoLines",
          "description": "Computes value for `_hasTwoLines` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 435,
              "column": 4
            },
            "end": {
              "line": 440,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "listType",
              "type": "?String",
              "description": "Selected list type."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateListStyles",
          "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 446,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "?String"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_applyListStyles",
          "description": "Applies `--paper-item-icon-width` variable.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 460,
              "column": 4
            },
            "end": {
              "line": 473,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size",
              "type": "Number",
              "description": "Icon width in pixels."
            },
            {
              "name": "target",
              "type": "?Element",
              "description": "The target to apply styling. Default to this."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_persistRequestsOrder",
          "description": "Stores current order of requests in the project.\nThis shouls be only called wshen `project` property is set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 492,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_idsArrayEqual",
          "description": "Tests if two arrays has the same order of ids (strings).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 499,
              "column": 4
            },
            "end": {
              "line": 515,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a1",
              "type": "Array.<String>",
              "description": "Array a"
            },
            {
              "name": "a2",
              "type": "Array.<String>",
              "description": "Array b"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when elements are ordered the same way."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchProjectUpdate",
          "description": "Dispatches `project-object-changed` event to inform model to update\nthe data.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 523,
              "column": 4
            },
            "end": {
              "line": 531,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Data to store."
            }
          ],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_projectChanged",
          "description": "Handler for the `project-object-changed` event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 550,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "False if the event was not handled."
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_updateProjectOrder",
          "description": "Updates requests order when project changed.\nIt reorder requests array for changed project order. It won't change\nrequests array when order is the same. It also won't change order when\nrequest list is different that project's requests list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 559,
              "column": 4
            },
            "end": {
              "line": 586,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Changed project"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when order has changed"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_dispatchExportData",
          "description": "Dispatches `export-data` event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 593,
              "column": 4
            },
            "end": {
              "line": 609,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request to export."
            },
            {
              "name": "opts",
              "type": "Object"
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_openRequest",
          "description": "Dispatches navigate event to open a request",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 615,
              "column": 4
            },
            "end": {
              "line": 626,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_validateType",
          "description": "Throws an error when type is not set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 631,
              "column": 4
            },
            "end": {
              "line": 635,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Passed to the function type"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "_computeQueryOptions",
          "description": "Computes pagination options.\nThis resets pagination status.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "limit",
              "type": "Number",
              "description": "Items per page limit."
            },
            {
              "name": "startKey",
              "type": "String",
              "description": "Query start key"
            },
            {
              "name": "skip",
              "type": "Number",
              "description": "Number of records to skip."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Pagination options for PouchDB."
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_computeDataUnavailable",
          "description": "Computes value for the `dataUnavailable` proeprty",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasRequests",
              "type": "Boolean",
              "description": "[description]"
            },
            {
              "name": "loading",
              "type": "Booelan",
              "description": "[description]"
            },
            {
              "name": "isSearch",
              "type": "Boolean",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_computeSearchListEmpty",
          "description": "Computes value for the `searchListEmpty` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasRequests",
              "type": "Boolean",
              "description": "[description]"
            },
            {
              "name": "loading",
              "type": "Booelan",
              "description": "[description]"
            },
            {
              "name": "isSearch",
              "type": "Boolean",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "refresh",
          "description": "Refreshes the data from the datastore.\nIt resets the query options, clears requests and makes a query to the datastore.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "reset",
          "description": "Resets the state of the variables.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_dataImportHandler",
          "description": "Handler for `data-imported` cutom event.\nRefreshes data state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 209,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_onDatabaseDestroy",
          "description": "Handler for the `datastore-destroyed` custom event.\nIf one of destroyed databases is saved store then it refreshes the sate.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "loadNext",
          "description": "Loads next page of results. It runs the task in a debouncer set to\nnext render frame so it's safe to call it more than once at the time.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_appendItems",
          "description": "Appends array items to the `requests` property.\nIt should be used instead of direct manipulation of the `items` array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of requests to appenmd"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_loadPage",
          "description": "Loads next page of results from the datastore.\nPagination used here has been described in PouchDB pagination strategies\ndocument.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 269,
              "column": 6
            },
            "end": {
              "line": 305,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_dispatchListEvent",
          "description": "Dispatches `request-list` custom event and returns the event.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 310,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_handleError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cause"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_processRequestsResponse",
          "description": "Prepares data to display in the view.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 338,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Object",
              "description": "List of documents returned by the model."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of request to be passed to the list view."
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_sortSavedResults",
          "description": "Sorts the query results by `updated` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 374,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object"
            },
            {
              "name": "b",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Number"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "query",
          "description": "Dispatches `request-query` custom event to `request-model`\nto perform a query.",
          "privacy": "public",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 384,
              "column": 6
            },
            "end": {
              "line": 413,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query",
              "type": "String",
              "description": "The query to performs. Pass empty stirng\n(or nothing) to reset query state."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Resolved promise when the query ends."
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_dispatchQueryEvent",
          "description": "Dispatches `request-query` custom event.\nThis event is handled by `request-mode` element to query the\ndatastore for user search term.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 421,
              "column": 6
            },
            "end": {
              "line": 433,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "q",
              "type": "String",
              "description": "Query passed to event detail."
            }
          ],
          "return": {
            "type": "CustomEvent"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_prepareQuery",
          "description": "Prepares a query string to search the data store.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 439,
              "column": 6
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query",
              "type": "String",
              "description": "User search term"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Processed query"
          },
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "_draggableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 255,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_scrollHandler",
          "description": "Called every time the element changed it's scroll position. It will call the `makeQuery`\nfunction when there's less than 120px left to scroll. (also it must be opened and must not\nalready querying).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "notifyResize",
          "description": "Notifies the list that the resize event occurred.\nShould be called whhen content of the list changed but the list wasn't\nvisible at the time.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openSaved",
          "description": "Handler for the `tap` event on the item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeA11yCommand",
          "description": "Computes command label depending on a OS.\nFor Mac it will be cmd + `key` and for the rest of the World it\nwill be ctrl + `key`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 311,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key",
              "type": "String",
              "description": "The key combination as a sufix after the command key"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Full command to display in command label."
          }
        },
        {
          "name": "_dragStart",
          "description": "Handler for the `dragstart` event added to the list item when `draggableEnabled`\nis set to true.\nThis function sets request data on the `dataTransfer` object with `arc/request-object`\nmime type. The request data is a serialized JSON with request model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDraggableValue",
          "description": "Computes value for the `draggable` property of the list item.\nWhen `draggableEnabled` is set it returns true which is one of the\nconditions to enable drag and drop on an element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "draggableEnabled",
              "type": "Boolean",
              "description": "Current value of `draggableEnabled`"
            }
          ],
          "return": {
            "type": "String",
            "desc": "`true` or `false` (as string) depending on the argument."
          }
        },
        {
          "name": "_dragoverHandler",
          "description": "Handler for `dragover` event on this element. If the dagged item is compatible\nit renders drop message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 358,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragleaveHandler",
          "description": "Handler for `dragleave` event on this element. If the dagged item is compatible\nit hides drop message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 4
            },
            "end": {
              "line": 376,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dropHandler",
          "description": "Handler for `drag` event on this element. If the dagged item is compatible\nit adds request to saved requests.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 4
            },
            "end": {
              "line": 400,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendRequest",
          "description": "Dispatches (by calling `_dispatch() function`) `save-request` event\nwhich is handled by request model to create new request.\nThe function do not need to do anything else since request change listeners\nwill insert the request to the list when saved.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "The request to store."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 199,
          "column": 2
        },
        "end": {
          "line": 419,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.SavedMenu",
      "attributes": [
        {
          "name": "requests",
          "description": "The list of request to render.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 43,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 25
            }
          },
          "metadata": {},
          "type": "Array.<Object>",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "has-requests",
          "description": "Computed value, true when the project has requests.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "type",
          "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 20
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project-id",
          "description": "Project datastore ID to display.\nThis should be set only when type is `project`",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 72,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "list-type",
          "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 82,
              "column": 8
            },
            "end": {
              "line": 86,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "project",
          "description": "A project object associated with requests.\nThis is only valid when `type` is set to `project`. It is set automatically\nwhen `readProjectRequests()` is called.",
          "sourceRange": {
            "file": "../requests-list-mixin/requests-list-mixin.html",
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 23
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcComponents.RequestsListMixin"
        },
        {
          "name": "querying",
          "description": "True when the element is querying the database for the data.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "page-limit",
          "description": "Single page query limit.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 58,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "query-options",
          "description": "Computed value.\nDatabase query options for pagination.\nUse `pageLimit` to set pagination limit.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 69,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "data-unavailable",
          "description": "Computed value. True if query ended and there's no results.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "is-search",
          "description": "When set this component is in sSavedListMixinearch mode.\nThis means that the list won't be loaded automatically and\nsome operations not related to search are disabled.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 82,
              "column": 10
            },
            "end": {
              "line": 85,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "search-list-empty",
          "description": "Computed value. True when the query has been performed and no items\nhas been returned. It is different from `listHidden` where less\nconditions has to be checked. It is set to true when it doesn't\nhave items, is not loading and is search.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 92,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "no-auto",
          "description": "When set it won't query for data automatically when attached to the DOM.",
          "sourceRange": {
            "file": "../saved-list-mixin/saved-list-mixin.html",
            "start": {
              "line": 99,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcComponents.SavedListMixin"
        },
        {
          "name": "draggable-enabled",
          "description": "Adds draggable property to the request list item element.\nThe `dataTransfer` object has `arc/request-object` mime type with\nserialized JSON with request model.",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 86
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "saved-menu",
      "mixins": [
        "ArcComponents.RequestsListMixin",
        "ArcComponents.SavedListMixin"
      ]
    }
  ]
}
